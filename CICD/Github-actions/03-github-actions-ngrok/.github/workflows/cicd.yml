name: CI/CD

on:
  push:
    branches: 
      - dev
     
env:
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: Dockerfile

  tryvy:
    name: Build and scan with trivy
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: |
            chzgustavo/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'chzgustavo/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
  build:
    name: Push image to repository
    runs-on: ubuntu-18.04
    needs: [lint, tryvy]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: chzgustavo/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to cluster
    runs-on: ubuntu-latest
    needs: [lint, tryvy, build]
    env:
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      HOLA: test
    steps:
    - uses: actions/checkout@master
    - name: deploy to cluster
      uses: yokawasa/action-setup-kube-tools@v0.4.0
      with:
        kubectl: '1.20.2'
        kustomize: '3.7.0'
    - name: kubectl
      id: kubectl
      run: |
        mkdir -p ~/.kube/
        echo "$KUBE_CONFIG_DATA" | base64 -d > ~/.kube/config
        cd kustomize
        kustomize edit set image chzgustavo/cicd-prueba=chzgustavo/${{ env.IMAGE_NAME }}:${{ github.sha }}
        kustomize build . | kubectl apply -f -
        kubectl -n prueba rollout status deployment/prueba-gha
        URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
        
        while [[ $URL != *"ngrok"* ]]; do
          echo "Still not ready" && sleep 5
          URL=`kubectl -n prueba get ngrok -o=custom-columns='DATA:status.url' | tail -n1`
        done
        echo "termino y encontro url"
        echo "$URL"
        echo "::set-output name=url::$URL"

    - name: Add Ngrok URL comment to PR
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: "main"
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pr_title: "Pulling ${{ github.ref }} into master" # Title of pull request
        pr_body: "URL for environment is: ${{ steps.kubectl.outputs.url }}"
